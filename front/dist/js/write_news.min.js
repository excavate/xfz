function News(){this.progressGroup=$("#progress-group")}News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.listenUploadFileEvent=function(){var n=$("#thumbnail-btn");n.change(function(){var t=n[0].files[0],e=new FormData;e.append("file",t),xfzajax.post({url:"/cms/upload_file/",data:e,processData:!1,contentType:!1,success:function(t){var e;200===t.code&&(e=t.data.url,$("#thumbnail-form").val(e)),400===t.code&&n.val("")}})})},News.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(t){t.preventDefault();var e=$(this).attr("data-news-id"),n=$("input[name='title']").val(),i=$("select[name='category']").val(),o=$("input[name='desc']").val(),a=$("input[name='thumbnail']").val(),r=window.ue.getContent(),s="",s=e?"/cms/edit_news/":"/cms/write_news/";xfzajax.post({url:s,data:{title:n,category:i,desc:o,thumbnail:a,content:r,news_id:e},success:function(t){200===t.code&&(e?xfzalert.alertSuccess("恭喜！新闻修改成功！",function(){window.location.reload()}):xfzalert.alertSuccess("恭喜！新闻发表成功！",function(){window.location.reload()}))}})})},News.prototype.run=function(){var t=this;t.initUEditor(),t.listenSubmitEvent(),t.listenUploadFileEvent()},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
